[
  {
    "type": "ExportNamedDeclaration",
    "declaration": null,
    "specifiers": [
      {
        "type": "ExportSpecifier",
        "local": { "type": "Identifier", "name": "SvgEmail" },
        "exported": { "type": "Identifier", "name": "default" }
      }
    ],
    "source": null
  },
  {
    "type": "VariableDeclaration",
    "kind": "var",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": { "type": "Identifier", "name": "_path" },
        "init": null
      }
    ]
  },
  {
    "type": "FunctionDeclaration",
    "params": [],
    "generator": false,
    "async": false,
    "id": { "type": "Identifier", "name": "_extends" },
    "body": {
      "type": "BlockStatement",
      "directives": [],
      "body": [
        {
          "type": "ExpressionStatement",
          "expression": {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": { "type": "Identifier", "name": "_extends" },
            "right": {
              "type": "ConditionalExpression",
              "test": {
                "type": "MemberExpression",
                "object": { "type": "Identifier", "name": "Object" },
                "property": { "type": "Identifier", "name": "assign" },
                "computed": false
              },
              "consequent": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "MemberExpression",
                    "object": { "type": "Identifier", "name": "Object" },
                    "property": { "type": "Identifier", "name": "assign" },
                    "computed": false
                  },
                  "property": { "type": "Identifier", "name": "bind" },
                  "computed": false
                },
                "arguments": []
              },
              "alternate": {
                "type": "FunctionExpression",
                "params": [{ "type": "Identifier", "name": "target" }],
                "generator": false,
                "async": false,
                "id": null,
                "body": {
                  "type": "BlockStatement",
                  "directives": [],
                  "body": [
                    {
                      "type": "ForStatement",
                      "init": {
                        "type": "VariableDeclaration",
                        "kind": "var",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": { "type": "Identifier", "name": "i" },
                            "init": {
                              "type": "NumericLiteral",
                              "value": 1,
                              "extra": { "rawValue": 1, "raw": "1" }
                            }
                          }
                        ]
                      },
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "<",
                        "left": { "type": "Identifier", "name": "i" },
                        "right": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "arguments"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          },
                          "computed": false
                        }
                      },
                      "update": {
                        "type": "UpdateExpression",
                        "prefix": false,
                        "argument": { "type": "Identifier", "name": "i" },
                        "operator": "++"
                      },
                      "body": {
                        "type": "BlockStatement",
                        "directives": [],
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "kind": "var",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "source"
                                },
                                "init": {
                                  "type": "MemberExpression",
                                  "object": {
                                    "type": "Identifier",
                                    "name": "arguments"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                  },
                                  "computed": true
                                }
                              }
                            ]
                          },
                          {
                            "type": "ForInStatement",
                            "left": {
                              "type": "VariableDeclaration",
                              "kind": "var",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": { "type": "Identifier", "name": "key" },
                                  "init": null
                                }
                              ]
                            },
                            "right": { "type": "Identifier", "name": "source" },
                            "body": {
                              "type": "BlockStatement",
                              "directives": [],
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "object": {
                                        "type": "MemberExpression",
                                        "object": {
                                          "type": "MemberExpression",
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Object"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "prototype"
                                          },
                                          "computed": false
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "hasOwnProperty"
                                        },
                                        "computed": false
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "call"
                                      },
                                      "computed": false
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "source"
                                      },
                                      { "type": "Identifier", "name": "key" }
                                    ]
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "directives": [],
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "object": {
                                              "type": "Identifier",
                                              "name": "target"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "key"
                                            },
                                            "computed": true
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "object": {
                                              "type": "Identifier",
                                              "name": "source"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "key"
                                            },
                                            "computed": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": null
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": { "type": "Identifier", "name": "target" }
                    }
                  ]
                }
              }
            }
          }
        },
        {
          "type": "ReturnStatement",
          "argument": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": { "type": "Identifier", "name": "_extends" },
              "property": { "type": "Identifier", "name": "apply" },
              "computed": false
            },
            "arguments": [
              { "type": "ThisExpression" },
              { "type": "Identifier", "name": "arguments" }
            ]
          }
        }
      ]
    }
  },
  {
    "type": "ImportDeclaration",
    "specifiers": [
      {
        "type": "ImportNamespaceSpecifier",
        "local": { "type": "Identifier", "name": "React" }
      }
    ],
    "source": {
      "type": "StringLiteral",
      "value": "react",
      "extra": { "rawValue": "react", "raw": "\"react\"" }
    }
  },
  {
    "type": "VariableDeclaration",
    "kind": "var",
    "declarations": [
      {
        "type": "VariableDeclarator",
        "id": { "type": "Identifier", "name": "SvgEmail" },
        "init": {
          "type": "FunctionExpression",
          "params": [{ "type": "Identifier", "name": "props" }],
          "generator": false,
          "async": false,
          "id": { "type": "Identifier", "name": "SvgEmail" },
          "body": {
            "type": "BlockStatement",
            "directives": [],
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": { "type": "Identifier", "name": "React" },
                    "property": {
                      "type": "Identifier",
                      "name": "createElement"
                    },
                    "computed": false
                  },
                  "arguments": [
                    {
                      "type": "StringLiteral",
                      "value": "svg",
                      "extra": { "rawValue": "svg", "raw": "\"svg\"" }
                    },
                    {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "_extends" },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "ObjectProperty",
                              "computed": false,
                              "key": { "type": "Identifier", "name": "xmlns" },
                              "value": {
                                "type": "StringLiteral",
                                "value": "http://www.w3.org/2000/svg",
                                "extra": {
                                  "rawValue": "http://www.w3.org/2000/svg",
                                  "raw": "\"http://www.w3.org/2000/svg\""
                                }
                              },
                              "shorthand": false
                            },
                            {
                              "type": "ObjectProperty",
                              "computed": false,
                              "key": { "type": "Identifier", "name": "width" },
                              "value": {
                                "type": "NumericLiteral",
                                "value": 24,
                                "extra": { "rawValue": 24, "raw": "24" }
                              },
                              "shorthand": false
                            },
                            {
                              "type": "ObjectProperty",
                              "computed": false,
                              "key": { "type": "Identifier", "name": "height" },
                              "value": {
                                "type": "NumericLiteral",
                                "value": 25,
                                "extra": { "rawValue": 25, "raw": "25" }
                              },
                              "shorthand": false
                            },
                            {
                              "type": "ObjectProperty",
                              "computed": false,
                              "key": { "type": "Identifier", "name": "fill" },
                              "value": {
                                "type": "StringLiteral",
                                "value": "none",
                                "extra": {
                                  "rawValue": "none",
                                  "raw": "\"none\""
                                }
                              },
                              "shorthand": false
                            }
                          ]
                        },
                        { "type": "Identifier", "name": "props" }
                      ]
                    },
                    {
                      "type": "LogicalExpression",
                      "operator": "||",
                      "left": { "type": "Identifier", "name": "_path" },
                      "right": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": { "type": "Identifier", "name": "_path" },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "object": { "type": "Identifier", "name": "React" },
                            "property": {
                              "type": "Identifier",
                              "name": "createElement"
                            },
                            "computed": false
                          },
                          "arguments": [
                            {
                              "type": "StringLiteral",
                              "value": "path",
                              "extra": { "rawValue": "path", "raw": "\"path\"" }
                            },
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "ObjectProperty",
                                  "computed": false,
                                  "key": {
                                    "type": "Identifier",
                                    "name": "stroke"
                                  },
                                  "value": {
                                    "type": "StringLiteral",
                                    "value": "#F5F1ED",
                                    "extra": {
                                      "rawValue": "#F5F1ED",
                                      "raw": "\"#F5F1ED\""
                                    }
                                  },
                                  "shorthand": false
                                },
                                {
                                  "type": "ObjectProperty",
                                  "computed": false,
                                  "key": {
                                    "type": "Identifier",
                                    "name": "strokeLinecap"
                                  },
                                  "value": {
                                    "type": "StringLiteral",
                                    "value": "round",
                                    "extra": {
                                      "rawValue": "round",
                                      "raw": "\"round\""
                                    }
                                  },
                                  "shorthand": false
                                },
                                {
                                  "type": "ObjectProperty",
                                  "computed": false,
                                  "key": {
                                    "type": "Identifier",
                                    "name": "strokeLinejoin"
                                  },
                                  "value": {
                                    "type": "StringLiteral",
                                    "value": "round",
                                    "extra": {
                                      "rawValue": "round",
                                      "raw": "\"round\""
                                    }
                                  },
                                  "shorthand": false
                                },
                                {
                                  "type": "ObjectProperty",
                                  "computed": false,
                                  "key": {
                                    "type": "Identifier",
                                    "name": "strokeWidth"
                                  },
                                  "value": {
                                    "type": "NumericLiteral",
                                    "value": 1.5,
                                    "extra": { "rawValue": 1.5, "raw": "1.5" }
                                  },
                                  "shorthand": false
                                },
                                {
                                  "type": "ObjectProperty",
                                  "computed": false,
                                  "key": { "type": "Identifier", "name": "d" },
                                  "value": {
                                    "type": "StringLiteral",
                                    "value": "M21.75 7.286v10.5a2.25 2.25 0 0 1-2.25 2.25h-15a2.25 2.25 0 0 1-2.25-2.25v-10.5m19.5 0a2.25 2.25 0 0 0-2.25-2.25h-15a2.25 2.25 0 0 0-2.25 2.25m19.5 0v.243a2.25 2.25 0 0 1-1.07 1.916l-7.5 4.615a2.25 2.25 0 0 1-2.36 0l-7.5-4.614A2.25 2.25 0 0 1 2.25 7.53v-.244",
                                    "extra": {
                                      "rawValue": "M21.75 7.286v10.5a2.25 2.25 0 0 1-2.25 2.25h-15a2.25 2.25 0 0 1-2.25-2.25v-10.5m19.5 0a2.25 2.25 0 0 0-2.25-2.25h-15a2.25 2.25 0 0 0-2.25 2.25m19.5 0v.243a2.25 2.25 0 0 1-1.07 1.916l-7.5 4.615a2.25 2.25 0 0 1-2.36 0l-7.5-4.614A2.25 2.25 0 0 1 2.25 7.53v-.244",
                                      "raw": "\"M21.75 7.286v10.5a2.25 2.25 0 0 1-2.25 2.25h-15a2.25 2.25 0 0 1-2.25-2.25v-10.5m19.5 0a2.25 2.25 0 0 0-2.25-2.25h-15a2.25 2.25 0 0 0-2.25 2.25m19.5 0v.243a2.25 2.25 0 0 1-1.07 1.916l-7.5 4.615a2.25 2.25 0 0 1-2.36 0l-7.5-4.614A2.25 2.25 0 0 1 2.25 7.53v-.244\""
                                    }
                                  },
                                  "shorthand": false
                                }
                              ]
                            }
                          ]
                        },
                        "extra": { "parenthesized": true, "parenStart": 619 }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    ]
  },
  {
    "type": "ExportNamedDeclaration",
    "declaration": null,
    "specifiers": [
      {
        "type": "ExportSpecifier",
        "local": { "type": "Identifier", "name": "SvgEmail" },
        "exported": { "type": "Identifier", "name": "ReactComponent" }
      }
    ],
    "source": null
  },
  {
    "type": "ExportDefaultDeclaration",
    "declaration": {
      "type": "StringLiteral",
      "value": "/src/assets/icons/email.svg",
      "extra": {
        "rawValue": "/src/assets/icons/email.svg",
        "raw": "\"/src/assets/icons/email.svg\""
      }
    }
  }
]
